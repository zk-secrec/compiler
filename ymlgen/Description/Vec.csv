"add_uint_uv","Adding the fixed value on wire to all elements of the vector on wires."
"mul_uint_uv","Multiplying all elements of the vector on wires with the fixed value on wire."
"add_preuint_uv","Adding the constant in `$pre` to all elements of the vector on wires."
"mul_preuint_uv","Multiplying all elements of the vector on wires with the constant in `$pre`."
"negate_uv","Negating all elements of the vector on wires."
"sub_uv","Subtracting the second vector on wires from the first one pointwise. More efficient than vectorized subtraction due to negation being done via multiplying by constant -1 in `$pre`."
"sub_uint_uv","Subtracting all elements of a vector on wires from a fixed value on wire."
"sub_preuint_uv","Subtracting all elements of a vector on wires from a constant in `$pre`."
"sum_uv","The sum of all elements of a vector on wires."
"prod_uv","The product of all elements of a vector on wires."
"scalar_prod_uv","The scalar (dot) product of two vectors on wires."
"check_bit_uv","Assertion that all elements of the given vector on wires are bits (either 0 or 1)."
"bitextract_uv","The little endian binary representations of the integers in the given vector on wires. The second argument is the public length of the resulting list of vectors on wires. Every vector in the resulting list contains the corresponding bit in each representation. If any of the integers cannot be represented by the expected number of bits then a run time error occurs."
"vectorized_bitextracts","A synonym of `bitextract_uv`."
"is_nonnegative_uv","The signs of the elements in the given vector on wires, all considered as signed integers with the number of bits given as the second argument. In the result, 1 means non-negative and 0 means negative."
"abs_uv","The absolute values of the elements in the given vector on wires, all values being considered as signed integers with the number of bits given as the second argument."
"max_uv","Pointwise maximum of two vectors on wires, all values being considered as unsigned integers with the number of bits given as the third argument."
"max_uint_uv","Maximum of each element of the given vector on wires with the fixed value on wire. All values are considered as unsigned integers with the number of bits given as the third argument."
"min_uv","Pointwise minimum of two vectors on wires, all values being considered as unsigned integers with the number of bits given as the third argument."
"min_uint_uv","Minimum of each element of the given vector on wires with the fixed value on wire. All values are considered as unsigned integers with the number of bits given as the third argument."
"ge_uv","Pointwise greater-than-or-equal-to relation of two vectors on wires, all values being considered as unsigned integers with the number of bits given as the third argument. In the result, 1 means true (in relation), 0 means false (not in relation)."
"le_uv","Pointwise less-than-or-equal-to relation of two vectors on wires, all values being considered as unsigned integers with the number of bits given as the third argument. In the result, 1 means true (in relation), 0 means false (not in relation)."
"gt_uv","Pointwise greater-than relation of two vectors on wires, all values being considered as unsigned integers with the number of bits given as the third argument. In the result, 1 means true (in relation), 0 means false (not in relation)."
"lt_uv","Pointwise less-than relation of two vectors on wires, all values being considered as unsigned integers with the number of bits given as the third argument. In the result, 1 means true (in relation), 0 means false (not in relation)."
"ge_uv_uint","Greater-than-or-equal-to relation applied to each element of the given vector on wires and the fixed value on wire. All values are considered as unsigned integers with the number of bits given as the third argument. In the result, 1 means true (in relation), 0 means false (not in relation)."
"le_uv_uint","Less-than-or-equal-to relation applied to each element of the given vector on wires and the fixed value on wire. All values are considered as unsigned integers with the number of bits given as the third argument. In the result, 1 means true (in relation), 0 means false (not in relation)."
"gt_uv_uint","Greater-than relation applied to each element of the given vector on wires and the fixed value on wire. All values are considered as unsigned integers with the number of bits given as the third argument. In the result, 1 means true (in relation), 0 means false (not in relation)."
"lt_uv_uint","Less-than relation applied to each element of the given vector on wires and the fixed value on wire. All values are considered as unsigned integers with the number of bits given as the third argument. In the result, 1 means true (in relation), 0 means false (not in relation)."
"and_uv","Pointwise logical conjunction of given two vectors on wires, 1 meaning true and 0 meaning false."
"xor_uv","Pointwise xor of given two vectors on wires, 1 meaning true and 0 meaning false."
"or_uv","Pointwise logical disjunction of given two vectors on wires, 1 meaning true and 0 meaning false."
"not_uv","Pointwise logical negation of given vector on wires, 1 meaning true and 0 meaning false."
"assert_zero_uv","Assertion of all elements of given vector on wires being zeros."
"assert_one_uv","Assertion of all elements of given vector on wires being equal to one."
"assert_eq_uv","Assertion of terms in each pair of corresponding elements of two given vectors on wires being equal."
"assert_lt_uv","Assertion of every element in the first vector on wires being less than the corresponding element in the second vector on wire. All values are considered as unsigned integers with the number of bits given as the third argument."
